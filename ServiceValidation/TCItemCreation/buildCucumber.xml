
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="Tc12SOATestFramewrk">
    <property environment="env"/>
    <property name="junit.output.dir" value="output"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="Tc12SOATestFramewrk.classpath">
        <pathelement location="bin"/>
        <pathelement location="libs/SOAlibs/avalon-framework-4.1.5.jar"/>
        <pathelement location="libs/SOAlibs/httpclient-4.5.2.jar"/>
        <pathelement location="libs/SOAlibs/httpcore-4.4.4.jar"/>
        <pathelement location="libs/SOAlibs/jacorb.jar"/>
        <pathelement location="libs/SOAlibs/logkit-1.2.jar"/>
        <pathelement location="libs/SOAlibs/resolver.jar"/>
        <pathelement location="libs/SOAlibs/TcSoaClient_12000.0.0.jar"/>
        <pathelement location="libs/SOAlibs/TcSoaCommon_12000.0.0.jar"/>
        <pathelement location="libs/SOAlibs/TcSoaCoreStrong_12000.0.0.jar"/>
        <pathelement location="libs/SOAlibs/TcSoaQueryStrong_12000.0.0.jar"/>
        <pathelement location="libs/SOAlibs/TcSoaStrongModel_12000.0.0.jar"/>
        <pathelement location="libs/SOAlibs/teamcenter_sso_applib.jar"/>
        <pathelement location="libs/SOAlibs/teamcenter_sso_common.jar"/>
        <pathelement location="libs/SOAlibs/teamcenter_sso_webtoolkit.jar"/>
        <pathelement location="libs/SOAlibs/xercesImpl.jar"/>
        <pathelement location="libs/SOAlibs/xml-apis.jar"/>
        <pathelement location="libs/cobertura-2.1.1.jar"/>
        <pathelement location="libs/cucumber-core-1.2.5.jar"/>
        <pathelement location="libs/cucumber-html-0.2.6.jar"/>
        <pathelement location="libs/cucumber-java-1.2.5.jar"/>
        <pathelement location="libs/cucumber-junit-1.2.5.jar"/>
        <pathelement location="libs/cucumber-jvm-deps-1.0.5.jar"/>
        <pathelement location="libs/cucumber-reporting-3.15.0.jar"/>
        <pathelement location="libs/gherkin-2.12.2.jar"/>
        <pathelement location="libs/junit-4.12.jar"/>
        <pathelement location="libs/log4j.jar"/>
        <pathelement location="libs/maven-cucumber-reporting-3.15.0.jar"/>
        <pathelement location="libs/SOAlibs/TcSoaQueryLoose_12000.0.0.jar"/>
        <pathelement location="libs/SOAlibs/TcSoaCoreLoose_12000.0.0.jar"/>
        <pathelement location="libs/SOAlibs/tcgatewaystubs.jar"/>
        <pathelement location="libs/cucumber-java8-1.2.5.jar"/>
        <pathelement location="libs/mockito-all-2.0.2-beta.jar"/>
        <pathelement location="libs/SOAlibs/commons-codec.jar"/>
        <pathelement location="libs/SOAlibs/commons-httpclient-contrib-3.1.jar"/>
        <pathelement location="libs/SOAlibs/commons-logging.jar"/>
    </path>

	<target name="classpath">
       <path id="classpath">
          	<fileset dir="Path of your jars">
               <include name="**/*.jar"/>
           	</fileset>
           	<pathelement location="Path of your project/classes"/>
           	<pathelement location="Path of your feature files"/>
       	</path>
   	</target>

	<target name="compile" depends="build">
			<!-- Invokes java compiler to compile the java code present at the path of scrdir and 
			 keeps the compiled files at the destination directory.
			 Also please note, do not use the option fork=true here as this invokes the Ant default JVM which can contradict with your machineâ€™s JVM. -->

	 	<javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
	            <src path="src"/>
	            <classpath refid="Tc12SOATestFramewrk.classpath"/>
        </javac>
	
		<copy todir="${ant.project.name}: ${ant.file}/classes">
	      	<fileset dir="Path of Main classes" excludes="**/*.java" />
	     	<fileset dir="Path of Step definition files" excludes="**/*.java" />
	    </copy>
 	</target>

	<target name="cucumber" depends="compile ">
        <mkdir dir="Path of the project/Name of the folder which will be used for storing cucumber reports"/> 
			<!--Ex Path of project/target-->

	        <java classname="cucumber.api.cli.Main" fork="false" failonerror="false"> 
				<!-- This step invokes the cucumber default main class -->
	             <classpath refid="classpath"/>
	
				<!-- This argument is used to create junit report for the project. Junit report is usually the xml report -->
	            <arg value="--plugin"/>
				<arg value="junit:Path of project /Folder name/any name-report.xml"/>
	
				<!-- This argument is used to create Json report. -->
				<arg value="--plugin"/>
				<arg value="json:Path of project/folder name/any name.json"/>
	
				<!-- This argument is used to create pretty html reports -->
				<arg value="--plugin"/>
	            <arg value="pretty"/>
	
				<!-- This argument is used in case you want to execute any specific tags -->
	            <arg value="--tags"/>
	        	<arg value="@Tagname"/>                
	
				<arg value="--glue"/>
	
	            <arg value="StepDefinitions package name"/>
	            <arg value="Path of feature files"/>
	        </java>

			<junitreport todir="Path of the project/folder name /any name-report">		
                 <fileset dir="target">
                     <include name="any name-report.xml"/>
                 </fileset>
                 <report format="frames" todir="Path of the project/folder name/any name-report"/>
	         </junitreport>
     </target>	
</project>
